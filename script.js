const cityInput = document.getElementById('cityInput');
const getWeatherBtn = document.getElementById('getWeatherBtn');
const weatherInfo = document.getElementById('weather-info');
const farmerTips = document.getElementById('farmer-tips');
const themeToggle = document.getElementById('themeToggle');
const forecastContainer = document.querySelector('.forecast');
let isDarkTheme = false;

const apiKey = 'c708426913319b328c4ff4719583d1c6'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π API-–∫–ª—é—á –æ—Ç OpenWeatherMap

// –≠–º–æ–¥–∂–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
const weatherEmojiMap = {
    "01d": "‚òÄÔ∏è", // —Å–æ–ª–Ω–µ—á–Ω–æ
    "01n": "üåï", // —Å–æ–ª–Ω–µ—á–Ω–æ –Ω–æ—á—å—é
    "02d": "‚õÖ", // –Ω–µ–º–Ω–æ–≥–æ –æ–±–ª–∞—á–Ω–æ
    "02n": "üå•Ô∏è", // –Ω–µ–º–Ω–æ–≥–æ –æ–±–ª–∞—á–Ω–æ –Ω–æ—á—å—é
    "03d": "‚òÅÔ∏è", // –æ–±–ª–∞—á–Ω–æ
    "03n": "‚òÅÔ∏è", // –æ–±–ª–∞—á–Ω–æ –Ω–æ—á—å—é
    "04d": "‚òÅÔ∏è", // –æ–±–ª–∞—á–Ω–æ
    "04n": "‚òÅÔ∏è", // –æ–±–ª–∞—á–Ω–æ –Ω–æ—á—å—é
    "09d": "üå¶Ô∏è", // –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–∂–¥–∏
    "09n": "üå¶Ô∏è", // –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–∂–¥–∏ –Ω–æ—á—å—é
    "10d": "üåßÔ∏è", // –¥–æ–∂–¥—å
    "10n": "üåßÔ∏è", // –¥–æ–∂–¥—å –Ω–æ—á—å—é
    "11d": "‚õàÔ∏è", // –≥—Ä–æ–∑–∞
    "11n": "‚õàÔ∏è", // –≥—Ä–æ–∑–∞ –Ω–æ—á—å—é
    "13d": "‚ùÑÔ∏è", // —Å–Ω–µ–≥
    "13n": "‚ùÑÔ∏è", // —Å–Ω–µ–≥ –Ω–æ—á—å—é
    "50d": "üå´Ô∏è", // —Ç—É–º–∞–Ω
    "50n": "üå´Ô∏è"  // —Ç—É–º–∞–Ω –Ω–æ—á—å—é
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
const fetchWeather = async (city) => {
    if (!city) {
        alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.');
        return;
    }

    try {
        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=${apiKey}`;
        const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&lang=ru&appid=${apiKey}`;
        const weatherResponse = await fetch(weatherUrl);
        const forecastResponse = await fetch(forecastUrl);

        if (!weatherResponse.ok || !forecastResponse.ok) {
            throw new Error(`–û—à–∏–±–∫–∞: ${weatherResponse.status} ${weatherResponse.statusText}`);
        }

        const weatherData = await weatherResponse.json();
        const forecastData = await forecastResponse.json();
        displayWeather(weatherData);
        displayForecast(forecastData);
    } catch (error) {
        weatherInfo.innerHTML = `<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</p>`;
        forecastContainer.innerHTML = '';
    }
};

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
const displayWeather = (data) => {
    const { main, weather } = data;
    const temp = main.temp;
    const condition = weather[0].description;
    const icon = weather[0].icon;

    // –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∂–∏ –¥–ª—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
    const weatherEmoji = weatherEmojiMap[icon] || "‚ùì";

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    weatherInfo.style.opacity = 0; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    setTimeout(() => {
        weatherInfo.innerHTML = `
            <h2>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C ${weatherEmoji}</h2>
            <p>–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: ${condition}</p>
        `;
        weatherInfo.style.opacity = 1; // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
    }, 300);

    updateFarmerTips(temp, condition, main.humidity, main.pressure, weather[0].main);
};

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
const displayForecast = (data) => {
    const forecastList = data.list.filter((item, index) => index % 8 === 0); // –ë–µ—Ä–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
    forecastContainer.innerHTML = '';

    const days = ['–°–µ–≥–æ–¥–Ω—è', '–ó–∞–≤—Ç—Ä–∞', '–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', '–ß–µ—Ä–µ–∑ –¥–≤–∞ –¥–Ω—è'];

    forecastList.slice(0, 3).forEach((item, index) => {
        const tempMin = item.main.temp_min;
        const tempMax = item.main.temp_max;
        const condition = item.weather[0].description;
        const icon = item.weather[0].icon;
        const weatherEmoji = weatherEmojiMap[icon] || "‚ùì";

        forecastContainer.innerHTML += `
            <div class="forecast-item">
                <p>${days[index]}</p>
                <p>${Math.round(tempMax)}¬∞C / ${Math.round(tempMin)}¬∞C</p>
                <p>${weatherEmoji}</p>
                <p>${condition}</p>
            </div>
        `;
    });
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤
const updateFarmerTips = (temp, condition, humidity, pressure, weatherMain) => {
    let tip = '';

    if (weatherMain === 'Rain' || weatherMain === 'Drizzle') {
        tip = `–î–æ–∂–¥–ª–∏–≤–æ (${temp}¬∞C). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–µ–π –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥—Ä–µ–Ω–∞–∂ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ.`;
    } else if (weatherMain === 'Clear') {
        if (temp > 30) {
            tip = `–°–æ–ª–Ω–µ—á–Ω–æ –∏ –∂–∞—Ä–∫–æ (${temp}¬∞C). –û–±–µ—Å–ø–µ—á—å—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –ø–æ–ª–∏–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ—Å—ã—Ö–∞–Ω–∏—è.`;
        } else if (temp < 10) {
            tip = `–°–æ–ª–Ω–µ—á–Ω–æ, –Ω–æ —Ö–æ–ª–æ–¥–Ω–æ (${temp}¬∞C). –ó–∞—â–∏—Ç–∏—Ç–µ –º–æ–ª–æ–¥—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–∞–º–æ—Ä–æ–∑–∫–æ–≤.`;
        } else {
            tip = `–°–æ–ª–Ω–µ—á–Ω–æ (${temp}¬∞C). –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –ø–æ–ª–µ–≤—ã—Ö —Ä–∞–±–æ—Ç.`;
        }
    } else if (weatherMain === 'Clouds') {
        tip = `–û–±–ª–∞—á–Ω–æ (${temp}¬∞C). –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ—Å–∞–¥–∫–∏ –∏ –ø–µ—Ä–µ—Å–∞–¥–∫–∏ —Ä–∞—Å—Ç–µ–Ω–∏–π.`;
    } else if (weatherMain === 'Snow') {
        tip = `–°–Ω–µ–≥–æ–ø–∞–¥ (${temp}¬∞C). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ–ø–ª–∏—Ü—ã –∏ —É–∫—Ä—ã—Ç–∏—è –¥–ª—è —Ä–∞—Å—Ç–µ–Ω–∏–π.`;
    } else if (weatherMain === 'Thunderstorm') {
        tip = `–ì—Ä–æ–∑–∞ (${temp}¬∞C). –û–ø–∞—Å–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–∞–±–æ—Ç—ã –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª—è—Ö.`;
    } else if (weatherMain === 'Mist' || weatherMain === 'Fog') {
        tip = `–¢—É–º–∞–Ω (${temp}¬∞C). –°–ª–µ–¥–∏—Ç–µ –∑–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç—å—é –ø–æ—á–≤—ã –∏ –≤–æ–∑–¥—É—Ö–∞.`;
    } else {
        tip = `–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ (${temp}¬∞C). –†–∞–±–æ—Ç—ã –Ω–∞ –ø–æ–ª—è—Ö –º–æ–≥—É—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.`;
    }

    if (humidity > 80) {
        tip += ' –í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—é –≥—Ä–∏–±–∫–æ–≤—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.';
    }

    if (pressure < 1000) {
        tip += ' –ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω—ã –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ –æ–ø—ã–ª–µ–Ω–∏–∏.';
    }

    farmerTips.style.opacity = 0; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    setTimeout(() => {
        farmerTips.innerHTML = `<p>${tip}</p>`;
        farmerTips.style.opacity = 1; // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
    }, 300);
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º–Ω–æ–π –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
themeToggle.addEventListener('click', () => {
    isDarkTheme = !isDarkTheme;
    document.body.classList.toggle('dark-theme', isDarkTheme);
    themeToggle.textContent = isDarkTheme ? '‚òÄÔ∏è' : 'üåô';
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É"
getWeatherBtn.addEventListener('click', () => {
    const city = cityInput.value.trim();
    fetchWeather(city);
});
