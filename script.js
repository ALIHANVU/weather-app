const cityInput = document.getElementById('cityInput');
const getWeatherBtn = document.getElementById('getWeatherBtn');
const locationElement = document.getElementById('location');
const cityNameElement = document.getElementById('cityName');
const currentTempElement = document.getElementById('current-temp');
const currentFeelsLikeElement = document.getElementById('current-feels-like');
const currentConditionElement = document.getElementById('current-condition');
const themeToggle = document.getElementById('themeToggle');
const returnBtn = document.getElementById('returnBtn');
const dailyForecastContainer = document.querySelector('.daily');
const farmerTipsContainer = document.querySelector('#farmer-tips-content');
let isDarkTheme = false;

const apiKey = 'c708426913319b328c4ff4719583d1c6';

const weatherEmojiMap = {
    "01d": "‚òÄÔ∏è", 
    "01n": "üåï", 
    "02d": "‚õÖ", 
    "02n": "üå•Ô∏è", 
    "03d": "‚òÅÔ∏è", 
    "03n": "‚òÅÔ∏è", 
    "04d": "‚òÅÔ∏è", 
    "04n": "‚òÅÔ∏è", 
    "09d": "üå¶Ô∏è", 
    "09n": "üå¶Ô∏è", 
    "10d": "üåßÔ∏è", 
    "10n": "üåßÔ∏è", 
    "11d": "‚õàÔ∏è", 
    "11n": "‚õàÔ∏è", 
    "13d": "‚ùÑÔ∏è", 
    "13n": "‚ùÑÔ∏è", 
    "50d": "üå´Ô∏è", 
    "50n": "üå´Ô∏è"  
};

const fetchWeather = async (city) => {
    if (!city) {
        alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.');
        return;
    }

    try {
        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=${apiKey}`;
        const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&lang=ru&appid=${apiKey}`;
        const weatherResponse = await fetch(weatherUrl);
        const forecastResponse = await fetch(forecastUrl);

        if (!weatherResponse.ok || !forecastResponse.ok) {
            throw new Error(`–û—à–∏–±–∫–∞: ${weatherResponse.status} ${weatherResponse.statusText}`);
        }

        const weatherData = await weatherResponse.json();
        const forecastData = await forecastResponse.json();
        displayWeather(weatherData);
        displayForecast(forecastData);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
};

const displayWeather = (data) => {
    const { main, weather, name } = data;
    const temp = main.temp;
    const feelsLike = main.feels_like;
    const condition = weather[0].description;
    const icon = weather[0].icon;
    const weatherEmoji = weatherEmojiMap[icon] || "‚ùì";

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
    cityNameElement.textContent = name;
    currentTempElement.textContent = `${Math.round(temp)}¬∞C ${weatherEmoji}`;
    currentFeelsLikeElement.textContent = `–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${Math.round(feelsLike)}¬∞C`;
    currentConditionElement.textContent = condition.charAt(0).toUpperCase() + condition.slice(1);

    // –°–∫—Ä—ã—Ç–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É" –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞
    document.querySelector('.input-container').style.display = 'none';
    cityNameElement.classList.remove('hidden');
    returnBtn.classList.remove('hidden');

    updateFarmerTips(temp, condition, main.humidity, main.pressure, weather[0].main);
};
const displayForecast = (data) => {
    const days = ["–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"];
    const uniqueDays = {};

    const forecastList = data.list.filter((item) => {
        const date = new Date(item.dt * 1000);
        const dayIndex = date.getDay();
        if (!uniqueDays[dayIndex]) {
            uniqueDays[dayIndex] = true;
            return true;
        }
        return false;
    });

    dailyForecastContainer.innerHTML = '';

    forecastList.forEach((item, index) => {
        const date = new Date(item.dt * 1000);
        const dayIndex = date.getDay();
        const day = index === 0 ? '–°–µ–≥–æ–¥–Ω—è' : (index === 1 ? '–ó–∞–≤—Ç—Ä–∞' : days[dayIndex]);
        const tempMin = item.main.temp_min;
        const tempMax = item.main.temp_max;
        const condition = item.weather[0].description;
        const icon = item.weather[0].icon;
        const weatherEmoji = weatherEmojiMap[icon] || "‚ùì";

        dailyForecastContainer.innerHTML += `
            <div class="day">
                <p>${day}</p>
                <p>${Math.round(tempMax)}¬∞C / ${Math.round(tempMin)}¬∞C</p>
                <p>${weatherEmoji}</p>
                <p>${condition}</p>
            </div>
        `;
    });
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤
const updateFarmerTips = (temp, condition, humidity, pressure, weatherMain) => {
    let tip = '';

    if (weatherMain === 'Rain' || weatherMain === 'Drizzle') {
        tip = `–î–æ–∂–¥–ª–∏–≤–æ (${temp}¬∞C). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–µ–π –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥—Ä–µ–Ω–∞–∂ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ.`;
    } else if (weatherMain === 'Clear') {
        if (temp > 30) {
            tip = `–°–æ–ª–Ω–µ—á–Ω–æ –∏ –∂–∞—Ä–∫–æ (${temp}¬∞C). –û–±–µ—Å–ø–µ—á—å—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –ø–æ–ª–∏–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ—Å—ã—Ö–∞–Ω–∏—è.`;
        } else if (temp < 10) {
            tip = `–°–æ–ª–Ω–µ—á–Ω–æ, –Ω–æ —Ö–æ–ª–æ–¥–Ω–æ (${temp}¬∞C). –ó–∞—â–∏—Ç–∏—Ç–µ –º–æ–ª–æ–¥—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–∞–º–æ—Ä–æ–∑–∫–æ–≤.`;
        } else {
            tip = `–°–æ–ª–Ω–µ—á–Ω–æ (${temp}¬∞C). –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –ø–æ–ª–µ–≤—ã—Ö —Ä–∞–±–æ—Ç.`;
        }
    } else if (weatherMain === 'Clouds') {
        tip = `–û–±–ª–∞—á–Ω–æ (${temp}¬∞C). –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ—Å–∞–¥–∫–∏ –∏ –ø–µ—Ä–µ—Å–∞–¥–∫–∏ —Ä–∞—Å—Ç–µ–Ω–∏–π.`;
    } else if (weatherMain === 'Snow') {
        tip = `–°–Ω–µ–≥–æ–ø–∞–¥ (${temp}¬∞C). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ–ø–ª–∏—Ü—ã –∏ —É–∫—Ä—ã—Ç–∏—è –¥–ª—è —Ä–∞—Å—Ç–µ–Ω–∏–π.`;
    } else if (weatherMain === 'Thunderstorm') {
        tip = `–ì—Ä–æ–∑–∞ (${temp}¬∞C). –û–ø–∞—Å–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–∞–±–æ—Ç—ã –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª—è—Ö.`;
    } else if (weatherMain === 'Mist' || weatherMain === 'Fog') {
        tip = `–¢—É–º–∞–Ω (${temp}¬∞C). –°–ª–µ–¥–∏—Ç–µ –∑–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç—å—é –ø–æ—á–≤—ã –∏ –≤–æ–∑–¥—É—Ö–∞.`;
    } else {
        tip = `–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ (${temp}¬∞C). –†–∞–±–æ—Ç—ã –Ω–∞ –ø–æ–ª—è—Ö –º–æ–≥—É—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.`;
    }

    if (humidity > 80) {
        tip += ' –í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—é –≥—Ä–∏–±–∫–æ–≤—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.';
    }

    if (pressure < 1000) {
        tip += ' –ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω—ã –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ –æ–ø—ã–ª–µ–Ω–∏–∏.';
    }

    farmerTipsContainer.style.opacity = 0; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    setTimeout(() => {
        farmerTipsContainer.innerHTML = `<p class="tip">${tip}</p>`;
        farmerTipsContainer.style.opacity = 1; // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
    }, 300);
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º–Ω–æ–π –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
themeToggle.addEventListener('click', () => {
    isDarkTheme = !isDarkTheme;
    document.body.classList.toggle('dark-theme', isDarkTheme);
    themeToggle.textContent = isDarkTheme ? '‚òÄÔ∏è' : 'üåô';
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É"
getWeatherBtn.addEventListener('click', () => {
    const city = cityInput.value.trim();
    fetchWeather(city);
    // –°–∫—Ä—ã—Ç—å –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫—É "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É" –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    document.querySelector('.input-container').style.display = 'none';
    // –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    cityNameElement.textContent = city;
    cityNameElement.classList.remove('hidden');
    returnBtn.classList.remove('hidden');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
returnBtn.addEventListener('click', () => {
    document.querySelector('.input-container').style.display = 'flex';
    returnBtn.classList.add('hidden');
    locationElement.textContent = 'WeatherNow';
    cityNameElement.classList.add('hidden');
    currentTempElement.textContent = '--¬∞C';
    currentFeelsLikeElement.textContent = '–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ --¬∞C';
    currentConditionElement.textContent = '–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è';
    dailyForecastContainer.innerHTML = '';
    farmerTipsContainer.innerHTML = '';
    cityInput.value = '';
});





